import subprocess
import numpy as np

params = [#[10, 2, 1]
    [5, 2, 1], [5, 2, 2], [5, 2, 3], [5, 2, 4], [5, 2, 5], [5, 2, 6],
    [5, 5, 1], [5, 5, 2], [5, 5, 3], [5, 5, 4], [5, 5, 5], [5, 5, 6],
    [5, 10, 1], [5, 10, 2], [5, 10, 3], [5, 10, 4], [5, 10, 5], [5, 10, 6],
    [10, 2, 1], [10, 2, 2], [10, 2, 3], [10, 2, 4], [10, 2, 5], [10, 2, 6],
    [10, 5, 1], [10, 5, 2], [10, 5, 3], [10, 5, 4], [10, 5, 5], [10, 5, 6],
    [10, 10, 1], [10, 10, 2], [10, 10, 3], [10, 10, 4], [10, 10, 5], [10, 10, 6],
]

def average(arr):
    return np.average(arr, 0)

for param_set in params:
    print(param_set)
    numbers = []
    t = 0
    for seed in range(100, 105):
        output = subprocess.check_output(f"python3 TOP/runTOP.py --G {param_set[0]} --minSup {param_set[1]} --seqGap {param_set[2]} --seed {seed}", shell=True)
        last5 = output.decode("utf-8").replace("seconds", "").split("\n")[-8:-3]
        #print(last5)
        last5numbers = [round(float(x.split(":")[-1]), 3) for x in last5]
        numbers.append(last5numbers[1:])
        t = last5numbers[0] 
    avg = average(np.array(numbers))
    print(param_set[0], "&", param_set[1], "&", param_set[2], "&", t, "&", avg[0], "&", avg[1], "&", avg[2], "&", avg[3], "\\\\")
    print("\\hline")

'''
5 & 2 & 1 & 0.46 & 0.8432000000000001 & 0.6242000000000001 & 0.8408 & 0.6245999999999999 \\
\hline
5 & 2 & 2 & 0.89 & 0.8785999999999999 & 0.652 & 0.8779999999999999 & 0.6538 \\
\hline
5 & 2 & 3 & 2.76 & 0.9028 & 0.6714 & 0.9038 & 0.6801999999999999 \\
\hline
5 & 2 & 4 & 13.33 & 0.9042 & 0.6774000000000001 & 0.9034000000000001 & 0.6824 \\
\hline
5 & 2 & 5 & 79.42 & 0.9057999999999999 & 0.6792 & 0.9042 & 0.682 \\
\hline
5 & 2 & 6 & 459.12 & 0.9048 & 0.6776000000000002 & 0.9044000000000001 & 0.6829999999999999 \\
\hline
5 & 5 & 1 & 0.46 & 0.8198000000000001 & 0.6296 & 0.8178000000000001 & 0.6312 \\
\hline
5 & 5 & 2 & 0.82 & 0.8295999999999999 & 0.6407999999999999 & 0.8282 & 0.6424000000000001 \\
\hline
5 & 5 & 3 & 2.44 & 0.8271999999999998 & 0.6374 & 0.8256 & 0.6386000000000001 \\
\hline
5 & 5 & 4 & 10.32 & 0.8284 & 0.6382000000000001 & 0.8263999999999999 & 0.6386000000000001 \\
\hline
5 & 5 & 5 & 88.1 & 0.8299999999999998 & 0.6392 & 0.8284 & 0.6396000000000001 \\
\hline
5 & 5 & 6 & 481.63 & 0.829 & 0.6386000000000001 & 0.8276 & 0.6392 \\
\hline
5 & 10 & 1 & 0.42 & 0.7554000000000001 & 0.5841999999999999 & 0.7532 & 0.5845999999999999 \\
\hline
5 & 10 & 2 & 0.81 & 0.7382 & 0.5716 & 0.7365999999999999 & 0.572 \\
\hline
5 & 10 & 3 & 2.47 & 0.7108000000000001 & 0.5559999999999999 & 0.7085999999999999 & 0.5542 \\
\hline
5 & 10 & 4 & 10.37 & 0.7114 & 0.5561999999999999 & 0.709 & 0.554 \\
\hline
5 & 10 & 5 & 64.68 & 0.7076 & 0.554 & 0.7064 & 0.553 \\
\hline
5 & 10 & 6 & 501.04 & 0.7081999999999999 & 0.554 & 0.7064 & 0.553 \\
\hline
10 & 2 & 1 & 1.15 & 0.5738 & 0.46399999999999997 & 0.5676 & 0.46080000000000004 \\
\hline
10 & 2 & 2 & 2.88 & 0.668 & 0.5232 & 0.6624000000000001 & 0.5204000000000001 \\
\hline
10 & 2 & 3 & 11.16 & 0.735 & 0.5687999999999999 & 0.7323999999999999 & 0.5677999999999999 \\
\hline
10 & 2 & 4 & 61.71 & 0.763 & 0.5885999999999999 & 0.7588000000000001 & 0.5882 \\
\hline
10 & 2 & 5 & 429.36 & 0.7828 & 0.6033999999999999 & 0.7784000000000001 & 0.6026 \\
\hline
'''